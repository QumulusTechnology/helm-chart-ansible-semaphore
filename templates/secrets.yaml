{{/*
Secrets are merged to single file due to limitation of generating value once and using it in multiple template files
see link: https://github.com/helm/helm/issues/6456
*/}}

{{ $generatedPassword := randAlphaNum 64}}
{{ $databasePassword := default $generatedPassword .Values.databaseConfig.userPassword }}

{{ if .Release.IsInstall }}
{{- if .Values.backup.enabled }}

{{- if include "semaphore.backup.toS3Storage" . }}
---
apiVersion: v1
kind: Secret
metadata:
  name: semaphore-database-backup-s3
stringData:
  host: {{ .Values.backup.s3.host }}
  bucket: {{ .Values.backup.s3.bucket }}
  prefix: {{ .Values.backup.s3.prefix }}
  accessKeyId: {{ .Values.backup.s3.accessKeyId }}
  secretAccessKey: {{ .Values.backup.s3.secretAccessKey }}
{{- end }}

{{- if include "semaphore.backup.toGcsStorage" . }}
{{/*{{- if false }}*/}}
---
apiVersion: v1
kind: Secret
metadata:
  {{- include "semaphore.namespace" . | nindent 2 }}
  name: semaphore-database-backup-gcs
stringData:
  bucket: {{ .Values.backup.gcs.bucket }}
  bucketDirectory: {{ .Values.backup.gcs.bucketDirectory }}
  projectId: {{ .Values.backup.gcs.projectId }}
  serviceAccountEmail: {{ .Values.backup.gcs.serviceAccountEmail }}
  keyJson: {{ .Values.backup.gcs.keyJson | quote }}
{{- end }}

{{- end }}
{{- end }}

{{ if .Release.IsInstall }}
---
apiVersion: v1
kind: Secret
metadata:
  {{- include "semaphore.namespace" . | nindent 2 }}
  name: {{ include "semaphore.config.secretName" . }}
type: Opaque
stringData:
  config.json: |-
    {
      "{{ default "postgres" .Values.databaseConfig.dialect }}": {
        "host": "{{ include "semaphore.database.host" . }}:{{ include "semaphore.database.port" . | int }}",
        "name": "{{ include "semaphore.database.name" . }}",
        "user": "{{ include "semaphore.database.userName" . }}",
        "pass": "{{ $databasePassword }}",
        "options": null
      },
      "dialect": "{{ .Values.databaseConfig.dialect }}",
      "web_host": "{{- include "semaphore.config.webHost" . }}",
      "port": "{{ default 3000 .Values.semaphore.containerPort | int }}",
      "interface": "",
      "tmp_path": "/home/semaphore/tmp",
      "cookie_hash": "{{ randAlphaNum 32 | b64enc }}",
      "cookie_encryption": "{{ randAlphaNum 32 | b64enc }}",
      "access_key_encryption": "{{ randAlphaNum 32 | b64enc }}",
      "email_secure": false,
      "email_alert": {{ default false .Values.semaphore.emailAlerts }},
      "email_host": "{{ .Values.emailConfig.host }}",
      "email_port": "{{ .Values.emailConfig.port | int }}",
      "email_username": "{{ .Values.emailConfig.userName }}",
      "email_password": "{{ .Values.emailConfig.userPassword }}",
      "email_sender": "{{ .Values.emailConfig.sender }}",
      "ldap_enable": false,
      "ldap_needtls": false,
      "ldap_binddn": "",
      "ldap_bindpassword": "",
      "ldap_server": "",
      "ldap_searchdn": "",
      "ldap_searchfilter": "",
      "ldap_mappings": {
        "dn": "",
        "mail": "",
        "uid": "",
        "cn": ""
      },
      "telegram_chat": "",
      "telegram_token": "",
      "concurrency_mode": "",
      "max_parallel_tasks": 0,
      "telegram_alert": false,
      "ssh_config_path": "",
      "variables_passing_method": ""
    }
{{- end }}


{{ if .Release.IsInstall }}
{{- if .Values.database.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  {{- include "semaphore.namespace" . | nindent 2 }}
  name: semaphore-database-secrets
stringData:
  host: "{{ include "semaphore.database.host" . }}"
  port: "{{ include "semaphore.database.port" . }}"
  databaseName: "{{ include "semaphore.database.name" . }}"
  userName: "{{ include "semaphore.database.userName" . }}"
  userPassword: "{{ $databasePassword }}"
{{- end }}
{{- end }}